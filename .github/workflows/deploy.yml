name: Deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: GCP

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies on GitHub Actions runner
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    - name: remove the existing code on GCP instance
      run: |
        sshpass -p "${{ vars.GCP_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }} << 'EOF'
          rm -rf /home/shared/civic.ai
        EOF

    - name: Transfer code to GCP instance
      run: |
        sshpass -p "${{ vars.GCP_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }} "mkdir -p /home/shared/civic.ai/"
        sshpass -p "${{ vars.GCP_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ./backend ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }}:/home/shared/civic.ai/
        sshpass -p "${{ vars.GCP_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }} "mkdir -p /home/shared/civic.ai/"
        sshpass -p "${{ vars.GCP_PASSWORD }}" scp -o StrictHostKeyChecking=no -r ./frontend ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }}:/home/shared/civic.ai/

    - name: kill the current running process
      run: |
        sshpass -p "${{ vars.GCP_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }} << 'EOF'
          if lsof -i :3001; then
            echo "Port 3001 is in use, freeing it."
            echo "${{ vars.GCP_PASSWORD }}" | sudo -S kill -9 $(lsof -t -i :3001)
          else
            echo "Port 3001 is free."
          fi
          if lsof -i :3002; then
            echo "Port 3002 is in use, freeing it."
            echo "${{ vars.GCP_PASSWORD }}" | sudo -S kill -9 $(lsof -t -i :3002)
          else
            echo "Port 3002 is free."
          fi
        EOF

    - name: Build and deploy on GCP instance
      run: |
        sshpass -p "${{ vars.GCP_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ vars.GCP_USER }}@${{ vars.GCP_INSTANCE_IP }} << 'EOF'
          export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }};
          cd /home/shared/civic.ai/backend
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          nohup gunicorn -w 4 wsgi:app --bind 0.0.0.0:3002 > backend.log 2>&1 &

          cd ../frontend
          npm install
          npm run build
          nohup serve -s dist -l 3001 > frontend.log 2>&1 &

          cd ..
          echo "${{ vars.GCP_PASSWORD }}" | sudo -S systemctl restart apache2
        EOF